1.ll or ls -al 查看文件信息,后者包括隐藏文件
dr-xr-xr-x.  4 root root  4096 8月  16 20:47 boot
文档类型权限-连接数-文档拥有者-文档所属群组-文档容量-文档最后修改时间-文件或者文件夹名称
*文件名之前有个“.”表示是隐藏文件
*权限类型最后有个“.”表示selinux和acl的设置，当文件或者文件夹只使用了selinux context的属性
----------------------------------------------------------------------------------------
2.文档权限类型
d/r-x/r-x/r-x
第一个字符：[d]目录，[-]文件，[l]链接文件，[b]可随机存取设备，[c]键盘鼠标等一次性读取设备
接下来三个为一组，均为[r]读,[w]写,[x]执行，[-]无权限
第一组：文件拥有者可具备的权限
第二组：加入此群组的账号权限
第三组：非拥有者且不是群组的其他账号权限
*文件夹的x权限表示是否可以cd到该文件夹中
----------------------------------------------------------------------------------------
3.改变文件权限，其实root不受影响
chmod 754 filename 
-/rwx/r-x/r-- 权限的分数[4+2+1][4+0+1][4+0+0]=754 二进制
另一种方法：
（1）user （2）group （3）others可以借由u, g, o来代表三种身份的权限
-rwxr-xr--    chmod u=rwx,g=rx,o=r filename
chmod a+w filename 所有人都加写权限
chmod a-x filename 所有人都去除执行权限
----------------------------------------------------------------------------------------
4.改变权限相关操作，都是英文缩写
chgrp 改变所属群组
chown 改变文件拥有者
chmod 改变权限
----------------------------------------------------------------------------------------
5.目录
/ （root, 根目录）：与开机系统有关；
/usr （unix software resource）：与软件安装/执行有关；
/var （variable）：与系统运行过程有关

FHS要求必须要存在的目录
/bin 在单人维护模式下还能够被操作的指令,在/bin下面的指令可以被root与一般帐号所使用，
主要有：cat, chmod, chown, date, mv, mkdir, cp, bash等等常用的指令。
/boot 主要在放置开机会使用到的文件，包括Linux核心文件以及开机菜单与开机所需配置文件等等
/dev 任何设备与周边设备都是以文件的型态存在于这个目录当中的
/etc 系统主要的配置文件几乎都放置在这个目录内，例如人员的帐号密码档、各种服务的启始档等等
/lib 在开机时会用到的函数库， 以及在/bin或/sbin下面的指令会调用的函数库
/media 可移除的设备
/mnt 暂时挂载某些额外的设备
/opt 给第三方协力软件放置的目录.也可以习惯放置在/usr/local下
/run 系统开机后所产生的各项信息
/sbin 为开机过程中所需要的，里面包括了开机、修复、还原系统所需要的指令；某些服务器软件程序，一般则放置到/usr/sbin/
/srv 是一些网络服务启动之后，这些服务所需要取用的数据目录,常见的服务例如WWW, FTP等等
/tmp 让一般使用者或者是正在执行的程序暂时放置文件的地方。 这个目录是任何人都能够存取的,重要数据不可放置在此目录

FHS建议可以存在的目录
/home 系统默认的使用者主文件夹
/lib<qual> 用来存放与 /lib 不同的格式的二进制函数库，例如支持 64 位的 /lib64 函数库等
/root 系统管理员（root）的主文件
/lost+found 目录是使用标准的ext2/ext3/ext4文件系统格式才会产生的一个目录，目的在于当文件系统发生错误时， 
将一些遗失的片段放置到这个目录下。不过如果使用的是 xfs 文件系统的话，就不会存在这个目录
/proc 本身是一个“虚拟文件系统（virtual filesystem）,他放置的数据都是在内存当中， 例如系统核心、行程信息（process）、
周边设备的状态及网络状态等等。不占用硬盘空间
/sys 跟/proc非常类似，也是一个虚拟的文件系统，主要也是记录核心与系统硬件信息较相关的信息。包括目前已载入的核心模块与核心侦
测到的硬件设备信息等等。这个目录同样不占硬盘容量
----------------------------------------------------------------------------------------
6./usr
FHS 要求必须要存在的目录
/usr/bin 放置所有一般用户能够使用的指令；使用链接文件的方式将 /bin 链接至此，/usr/bin 与 /bin 是一样的，
另外，FHS 要求在此目录下不应该有子目录
/usr/lib/ 基本上，与 /lib 功能相同，所以 /lib 就是链接到此目录
/usr/local/ 系统管理员在本机自行安装自己下载的软件
/usr/sbin/  非系统正常运行所需要的系统指令
/usr/share/ 要放置只读架构的数据文件，当然也包括共享文件

FHS 建议可以存在的目录
/usr/games/ 与游戏比较相关的数据放置处
/usr/include/ c/c++等程序语言的文件开始（header）与包含档（include）放置处
/usr/libexec/ 某些不被一般使用者惯用的可执行文件或脚本（script）等等
/usr/lib<qual>/ 与 /lib<qual>/功能相同，因此目前 /lib<qual> 就是链接到此目录中
/usr/src/ 一般源代码建议放置到这里
----------------------------------------------------------------------------------------
7./var
FHS 要求必须要存在的目录
/var/cache/  应用程序本身运行过程中会产生的一些暂存盘
/var/lib/ 程序本身执行的过程中，需要使用到的数据文件放置的目录
/var/lock/ 某些设备或者是文件资源一次只能被一个应用程序所使用,以确保该设备只会给单一软件所使用
/var/log/ 重要!这是登录文件放置的目录！里面比较重要的文件如/var/log/messages, /var/log/wtmp（记录登陆者的信息）等
/var/mail/ 放置个人电子邮件信箱的目录，不过这个目录也被放置到/var/spool/mail/目录中,互为链接文件
/var/run/  某些程序或者是服务启动后，会将他们的PID放置在这个目录下
/var/spool/ 目录通常放置一些伫列数据，所谓的“伫列”就是排队等待其他程序使的数据,这些数据被使用后通常都会被删除

*链接文件
/bin --> /usr/bin
/sbin --> /usr/sbin
/lib --> /usr/lib
/lib64 --> /usr/lib64
/var/lock --> /run/lock
/var/run --> /run
----------------------------------------------------------------------------------------
8.绝对路径 or 相对路径
cd /var/log （absolute）
cd ../var/log （relative）

. ：代表当前的目录，也可以使用 ./ 来表示；
.. ：代表上一层目录，也可以 ../ 来代表。

----------------------------------------------------------------------------------------






